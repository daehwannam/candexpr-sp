
* Project
Initialize the project by:
#+begin_src sh
git submodule update --init --recursive
#+end_src

* Base directory
All commands should be run in the project root.

#+begin_src sh
if [ ! -d '.git' ] || [ ! -d '.submodules' ]; then
    echo 'The current directory is NOT the project root.'
fi
#+end_src

* Setup
** Environment
#+begin_src sh
ENV_NAME=candexpr
conda create -y -n $ENV_NAME python=3.10.9
conda activate $ENV_NAME

# pytorch for CUDA 11.6
pip install torch==1.12.0+cu116 torchvision==0.13.0+cu116 torchaudio==0.12.0 --extra-index-url https://download.pytorch.org/whl/cu116
pip install -r requirements.txt
#+end_src

** Domain specific setup
- [[file:domain/kqapro/README.org::*Setup][domain/kqapro/README.org::*Setup]]
- [[file:domain/overnight/README.org::*Setup][domain/overnight/README.org::*Setup]]

* Running
** Preprocessing
- [[file:domain/kqapro/README.org::*Preprocessing][domain/kqapro/README.org::*Preprocessing]]
- [[file:domain/overnight/README.org::*Preprocessing][domain/overnight/README.org::*Preprocessing]]

** Specifying a domain
Set the ~DOMAIN~ variable with ~kqapro~ or ~overnight~.
#+begin_src sh
DOMAIN=kqapro
# DOMAIN=overnight
#+end_src

** Training with logical forms
*** Training with the default options
#+begin_src sh
MODEL_LEARNING_DIR_PATH=./model-instance/${DOMAIN}/learning
python -m run --domain ${DOMAIN} --config config.${DOMAIN}.train_default --model-learning-dir $MODEL_LEARNING_DIR_PATH
#+end_src

If ~--model-learning-dir~ option is not specified, a directory is automatically created in =./model-instance/${DOMAIN}=.

*** Training for multiple decoding strategies
#+begin_src sh
python -m run --domain ${DOMAIN} --config config.${DOMAIN}.train_for_multiple_decoding_strategies
#+end_src

*** Training for multiple decoding strategies with a portion of the train set
#+begin_src sh
PERCENT=3  # between 0 to 100
python -m run --domain ${DOMAIN} --config config.${DOMAIN}.train_for_multiple_decoding_strategies --extra-config config.${DOMAIN}.extra.train_set_portion --train-set-percent $PERCENT
#+end_src

*** Training for multiple decoding strategies with batch_size=32
#+begin_src sh
python -m run --domain ${DOMAIN} --config config.${DOMAIN}.train_for_multiple_decoding_strategies --extra-config config.${DOMAIN}.batch.size=32
#+end_src

*** Training for multiple decoding strategies with bart-large
#+begin_src sh
python -m run --domain ${DOMAIN} --config config.${DOMAIN}.train_for_multiple_decoding_strategies --extra-config config.common.extra.bart-large
#+end_src

*** Training with grammar ablation
#+begin_src sh
ABLATION=ns  # ns, cnlts, nao, ...
python -m run --domain ${DOMAIN} --config config.${DOMAIN}.train_default --extra-config config.${DOMAIN}.extra.grammar.${ABLATION}
#+end_src

*** Training with grammar ablation and with a portion of the train set
#+begin_src sh
ABLATION=ns  # ns, cnlts, nao, ...
PERCENT=3  # between 0 to 100
python -m run --domain ${DOMAIN} --config config.${DOMAIN}.train_default --extra-config "config.${DOMAIN}.extra.grammar.${ABLATION}|config.${DOMAIN}.extra.train_set_portion" --train-set-percent $PERCENT
#+end_src

** Training with denotations
*** Learning from strong supervision with a small subset of dataset
**** Configuration
#+begin_src sh
SS_MODEL_LEARNING_DIR_PATH=./model-instance/${DOMAIN}/strongly-supervised-models
#+end_src

**** Training with a small subset of the trainin set
#+begin_src sh
python -m run --domain ${DOMAIN} --config config.${DOMAIN}.train_for_multiple_decoding_strategies \
       --model-learning-dir $SS_MODEL_LEARNING_DIR_PATH \
       --extra-config config.${DOMAIN}.extra.weaksup_pretraining
#+end_src

*** Learning from weak supervision
**** Configuration for Multiple GPUs
#+begin_src sh
# 4 GPUs
export CUDA_VISIBLE_DEVICES=$(seq -s , 0 3)  # 0,1,2,3
NUM_GPUS=$(($(echo $CUDA_VISIBLE_DEVICES | tr -cd , | wc -c) + 1))  # 4
ACCELERATE_CONFIG="accelerate/${NUM_GPUS}gpus.yaml"
#+end_src

**** Configuration for a decoding method
***** Fully-constrained decoding
#+begin_src sh
DECODING=full-constraints
EXTRA_OPTIONS=''
#+end_src

***** Without arg-candidate
#+begin_src sh
DECODING=no-arg-candidate
EXTRA_OPTIONS='--extra-config config.common.extra.using_arg_candidate=False'
#+end_src

***** Without arg-candidate and without union types
#+begin_src sh
DECODING=no-ac-no-dut
EXTRA_OPTIONS='--extra-config config.common.extra.using_arg_candidate=False|config.common.extra.using_distinctive_union_types=False'
#+end_src

***** Without any constrained decoding
#+begin_src sh
DECODING=no-constrained-decoding
EXTRA_OPTIONS='--extra-config config.common.extra.constrained_decoding=False'
#+end_src

**** Training with question-answer pairs on 4 GPUs
#+begin_src sh
export NCCL_P2P_LEVEL=NVL

SS_MODEL_LEARNING_DIR_PATH=./model-instance/${DOMAIN}/strongly-supervised-models
COMMON_WS_MODEL_LEARNING_DIR_PATH=./model-instance/${DOMAIN}/weakly-supervised-models

PRETRAINED_MODEL_PATH=$SS_MODEL_LEARNING_DIR_PATH/$DECODING:best/model
WS_MODEL_LEARNING_DIR_PATH=$COMMON_WS_MODEL_LEARNING_DIR_PATH/$DECODING

accelerate launch --num_processes $NUM_GPUS --config_file $ACCELERATE_CONFIG \
           --main_process_port $(shuf -i 49152-65535 -n 1) \
           -m run --domain ${DOMAIN} --using-tqdm true \
           --config config.${DOMAIN}.search_train \
           --model-learning-dir $WS_MODEL_LEARNING_DIR_PATH \
           --pretrained-model-path $PRETRAINED_MODEL_PATH \
           --resuming false \
           $EXTRA_OPTIONS
#+end_src

** Testing
*** Testing with specifying a model path and test directory path
#+begin_src sh
TEST_CONFIG="config.${DOMAIN}.test_on_val_set"  # or "config.${DOMAIN}.test_on_test_set"
MODEL_PATH='path/to/model'
TEST_DIR_PATH="model-test/${DOMAIN}/result"
# e.g. TEST_DIR_PATH="./model-test/${DOMAIN}/2023-07-19_01:17:04_094104_full-constraints:best/model"

python -m run --domain ${DOMAIN} --config $TEST_CONFIG --model-path $MODEL_PATH --test-dir $TEST_DIR_PATH
#+end_src

*** Testing with a specific decoding strategy
#+begin_src sh
TEST_CONFIG="config.${DOMAIN}.test_on_val_set"  # or "config.${DOMAIN}.test_on_test_set"
MODEL_PATH='path/to/model'
COMMON_TEST_CMD="python -m run --domain ${DOMAIN} --config $TEST_CONFIG --model-path $MODEL_PATH"

BEAM_CONFIG='config.common.extra.num_prediction_beams=1'

# full constraints
TEST_DIR_PATH="model-test/${DOMAIN}/result:full-constraints"
EXTRA_CONFIG="${BEAM_CONFIG}"
$COMMON_TEST_CMD --test-dir $TEST_DIR_PATH --extra-config $EXTRA_CONFIG

# without arg-candidate
TEST_DIR_PATH="model-test/${DOMAIN}/result:no-arg-candidate"
EXTRA_CONFIG="${BEAM_CONFIG}|config.common.extra.using_arg_candidate=False"
$COMMON_TEST_CMD --test-dir $TEST_DIR_PATH --extra-config $EXTRA_CONFIG

# without arg-candidate and union types
TEST_DIR_PATH="model-test/${DOMAIN}/result:no-ac-no-dut"
EXTRA_CONFIG="${BEAM_CONFIG}|config.common.extra.using_arg_candidate=False|config.common.extra.using_distinctive_union_types=False"
$COMMON_TEST_CMD --test-dir $TEST_DIR_PATH --extra-config $EXTRA_CONFIG

# without constrained-decoding
TEST_DIR_PATH="model-test/${DOMAIN}/result:no-constrained-decoding"
EXTRA_CONFIG="${BEAM_CONFIG}|config.common.extra.constrained_decoding=False"
$COMMON_TEST_CMD --test-dir $TEST_DIR_PATH --extra-config $EXTRA_CONFIG
#+end_src

*** Testing with disabling arg-candidate for an action
#+begin_src sh
TEST_CONFIG="config.${DOMAIN}.test_on_val_set"  # or "config.${DOMAIN}.test_on_test_set"
MODEL_PATH='path/to/model'
ACTION_NAME=keyword-concept     # or keyword-entity, keyword-relation, ...
TEST_DIR_PATH="model-test/${DOMAIN}/result:no-${ACTION_NAME}"
# e.g. TEST_DIR_PATH="./model-test/${DOMAIN}/2023-07-19_01:17:04_094104_full-constraints:best/model"

python -m run --domain ${DOMAIN} --config $TEST_CONFIG --model-path $MODEL_PATH --test-dir $TEST_DIR_PATH --extra-config config.${DOMAIN}.extra.no_arg_candidate --no-arg-candidate-for $ACTION_NAME
#+end_src

Example of ~MODEL_PATH~
- =./model-instance-keep/${DOMAIN}/multiple_decoding_strategies/full-constraints:best/model/=
- =./model-instance/${DOMAIN}/weakly-supervised-models/full-constraints/optim/best/best/model=

*** Testing with oracle on the validation set
#+begin_src sh
TEST_CONFIG="config.${DOMAIN}.oracle_test_on_val_set"
MODEL_PATH='path/to/model'
COMMON_TEST_CMD="python -m run --domain ${DOMAIN} --config $TEST_CONFIG --model-path $MODEL_PATH"

BEAM_CONFIG='config.common.extra.num_prediction_beams=4'

# full constraints
TEST_DIR_PATH="model-test/${DOMAIN}/result:full-constraints"
EXTRA_CONFIG="${BEAM_CONFIG}"
$COMMON_TEST_CMD --test-dir $TEST_DIR_PATH --extra-config $EXTRA_CONFIG

# without arg-candidate
TEST_DIR_PATH="model-test/${DOMAIN}/result:no-arg-candidate"
EXTRA_CONFIG="${BEAM_CONFIG}|config.common.extra.using_arg_candidate=False"
$COMMON_TEST_CMD --test-dir $TEST_DIR_PATH --extra-config $EXTRA_CONFIG

# without arg-candidate and union types
TEST_DIR_PATH="model-test/${DOMAIN}/result:no-ac-no-dut"
EXTRA_CONFIG="${BEAM_CONFIG}|config.common.extra.using_arg_candidate=False|config.common.extra.using_distinctive_union_types=False"
$COMMON_TEST_CMD --test-dir $TEST_DIR_PATH --extra-config $EXTRA_CONFIG

# without constrained-decoding
TEST_DIR_PATH="model-test/${DOMAIN}/result:no-constrained-decoding"
EXTRA_CONFIG="${BEAM_CONFIG}|config.common.extra.constrained_decoding=False"
$COMMON_TEST_CMD --test-dir $TEST_DIR_PATH --extra-config $EXTRA_CONFIG
#+end_src

*** Testing with grammar ablation
#+begin_src sh
ABLATION=ns  # ns, cnlts, nao, ...
TEST_CONFIG="config.${DOMAIN}.test_on_val_set"  # or "config.${DOMAIN}.test_on_test_set"
MODEL_PATH='path/to/model'
TEST_DIR_PATH="model-test/${DOMAIN}/result"
# e.g. TEST_DIR_PATH="./model-test/${DOMAIN}/2023-07-19_01:17:04_094104_full-constraints:best/model"

python -m run --domain ${DOMAIN} --config $TEST_CONFIG --model-path $MODEL_PATH --test-dir $TEST_DIR_PATH \
       --extra-config config.${DOMAIN}.extra.grammar.${ABLATION}
#+end_src

** Miscellaneous
*** Testing without decoding speed optimization
#+begin_src sh
TEST_CONFIG="config.${DOMAIN}.test_on_val_set"
MODEL_PATH='path/to/model'
TEST_DIR_PATH="model-test/${DOMAIN}/result"
# e.g. TEST_DIR_PATH="./model-test/${DOMAIN}/2023-07-19_01:17:04_094104_full-constraints:best/model"

if [ "${DOMAIN}" -eq 'overnight']
then do
    EXTRA_OPTIONS="--extra-config config.${DOMAIN}.extra.val_5_repeats"
fi

python -m run --domain ${DOMAIN} --config $TEST_CONFIG --model-path $MODEL_PATH --test-dir $TEST_DIR_PATH $EXTRA_OPTIONS
#+end_src
