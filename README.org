
* Project
Initialize the project by:
#+begin_src sh
git submodule update --init --recursive
#+end_src

* Base directory
#+begin_src sh
if [ ! -d '.git' ]; then
    echo 'The current directory is NOT the project root.'
fi
#+end_src

* Setup
** Dataset
#+begin_src sh
DOWNLOAD_PATH=../download
DATA_PATH=../data

mkdir -p $DOWNLOAD_PATH
wget -O $DOWNLOAD_PATH/KQAPro.IID.zip https://cloud.tsinghua.edu.cn/f/04ce81541e704a648b03/?dl=1
unzip $DOWNLOAD_PATH/KQAPro.IID.zip -d $DATA_PATH
mkdir -p ./dataset
ln -s $(realpath $DATA_PATH/KQAPro.IID) ./dataset/kqapro
#+end_src

** Pre-trained model (optional)
#+begin_src sh
DOWNLOAD_PATH=../download
PRETRAINED_PATH=../pretrained

wget -O $DOWNLOAD_PATH/bart-base.zip https://cloud.tsinghua.edu.cn/f/3b59ec6c43034cfc8841/?dl=1
unzip $DOWNLOAD_PATH/bart-base.zip -d $PRETRAINED_PATH
ln -s $(realpath $PRETRAINED_PATH) ./pretrained
#+end_src

** Environment
#+begin_src sh
ENV_NAME=kqapro
conda create -y -n $ENV_NAME python=3
conda activate $ENV_NAME

# pytorch for CUDA 11.6
pip install torch==1.12.0+cu116 torchvision==0.13.0+cu116 torchaudio==0.12.0 --extra-index-url https://download.pytorch.org/whl/cu116
pip install -r requirements.txt
#+end_src

* Running
** Preprocessing
#+begin_src sh
python -m domain.kqapro.preprocess --goal augmented_train_set
python -m domain.kqapro.preprocess --goal augmented_val_set
python -m domain.kqapro.preprocess --goal encoded_train_set
python -m domain.kqapro.preprocess --goal encoded_val_set
python -m domain.kqapro.preprocess --goal encoded_test_set
python -m domain.kqapro.preprocess --goal shuffled_augmented_train_set
python -m domain.kqapro.preprocess --goal shuffled_encoded_train_set
#+end_src

** Training
#+begin_src sh
python -m domain.kqapro.run --config config.train_strong_sup
#+end_src

** Training for multiple decoding strategies
#+begin_src sh
python -m domain.kqapro.run --config config.train_for_multiple_decoding_strategies
#+end_src

** Training for multiple decoding strategies with a portion of the train set
#+begin_src sh
PERCENT=5  # between 0 to 100
python -m domain.kqapro.run --config config.train_for_multiple_decoding_strategies --additional-config config.additional.train_set_portion --train-set-percent $PERCENT
#+end_src

** Test on the validation set
#+begin_src sh
MODEL_LEARNING_DIR_PATH='path/to/model/learning/dir'
# e.g. MODEL_LEARNING_DIR_PATH=model-instance/2023-07-15_10:10:24_916400
python -m domain.kqapro.run --config config.test_on_val_set --model-learning-dir $MODEL_LEARNING_DIR_PATH
#+end_src

*** Test on the validation set with specifying checkpoint path
#+begin_src sh
CHECKPOINT_PATH='path/to/checkpoint'
# e.g. CHECKPOINT_PATH='model-instance/2023-07-19_01:17:04_094104/full-constraints:best'

TEST_DIR_NAME='test-dir-name'
# e.g. TEST_DIR_NAME='2023-07-19_01:17:04_094104_full-constraints:best'

python -m domain.kqapro.run --config config.test_on_val_set --model-checkpoint-dir $CHECKPOINT_PATH --test-dir-name $TEST_DIR_NAME
#+end_src

** Test on the test set
This makes a prediction file without evaluation.

#+begin_src sh
MODEL_LEARNING_DIR_PATH='path/to/model/learning/dir'
# e.g. MODEL_LEARNING_DIR_PATH=model-instance/2023-07-15_10:10:24_916400
python -m domain.kqapro.run --config config.test_on_test_set --model-learning-dir $MODEL_LEARNING_DIR_PATH
#+end_src

*** Test on the test set with specifying checkpoint path
#+begin_src sh
CHECKPOINT_PATH='path/to/checkpoint'
# e.g. CHECKPOINT_PATH='model-instance/2023-07-19_01:17:04_094104/full-constraints:best'

TEST_DIR_NAME='test-dir-name'
# e.g. TEST_DIR_NAME=2023-07-19_01:17:04_094104_full-constraints:best

python -m domain.kqapro.run --config config.test_on_test_set --model-checkpoint-dir $CHECKPOINT_PATH --test-dir-name $TEST_DIR_NAME
#+end_src

** Evaluation with the official code
The evaluation code is slightly modified from [[https://github.com/shijx12/KQAPro_Baselines/blob/7cea2738fd095a2c17594d492923ee80a212ac0f/evaluate.py][KQAPro_Baselines/evaluate.py]].
The evaluation code requires a prediction file, which is the output from the previous steps.

#+begin_src sh
TRAIN_DATA_SET_PATH='path/to/train/data/set.json'
TEST_DATA_SET_PATH='path/to/test/data/set.json'
PREDICTION_FILE_PATH='path/to/predictions.txt'
python -m kqapro.evaluate --train $TRAIN_DATA_SET_PATH --test $TEST_DATA_SET_PATH --pred $PREDICTION_FILE_PATH
#+end_src

*** Example: evaluation on the validation set with the official code
#+begin_src sh
TRAIN_DATA_SET_PATH='./dataset/kqapro/train.json'
TEST_DATA_SET_PATH='./dataset/kqapro/val.json'
TEST_DIR_NAME='YOUR-TEST-DIRECTORY-NAME'
# e.g. TEST_DIR_NAME=2023-07-15_10:10:24_916400#0
PREDICTION_FILE_PATH="./model-test/$TEST_DIR_NAME/predictions.txt"
python -m kqapro.evaluate --train $TRAIN_DATA_SET_PATH --test $TEST_DATA_SET_PATH --pred $PREDICTION_FILE_PATH
#+end_src

* Acknowledgements
We thank to the authors of [[https://github.com/shijx12/][KQA Pro]] dataset. Our code also exploits the [[https://github.com/shijx12/KQAPro_Baselines][BART seq2seq program parser]] they released.
