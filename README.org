
* Project
Initialize the project by:
#+begin_src sh
git submodule update --init --recursive
#+end_src

* Base directory
#+begin_src sh
if [ ! -d '.git' ]; then
    echo 'The current directory is NOT the project root.'
fi
#+end_src

* Setup
** Dataset
#+begin_src sh
DOWNLOAD_PATH=../download
DATA_PATH=../data

mkdir -p $DOWNLOAD_PATH
wget -O $DOWNLOAD_PATH/KQAPro.IID.zip https://cloud.tsinghua.edu.cn/f/04ce81541e704a648b03/?dl=1
unzip $DOWNLOAD_PATH/KQAPro.IID.zip -d $DATA_PATH
mkdir -p ./dataset
ln -s $(realpath $DATA_PATH/KQAPro.IID) ./dataset/kqapro
#+end_src

** Pre-trained model
#+begin_src sh
DOWNLOAD_PATH=../download
PRETRAINED_PATH=../pretrained

wget -O $DOWNLOAD_PATH/bart-base.zip https://cloud.tsinghua.edu.cn/f/3b59ec6c43034cfc8841/?dl=1
unzip $DOWNLOAD_PATH/bart-base.zip -d $PRETRAINED_PATH
ln -s $(realpath $PRETRAINED_PATH) ./pretrained
#+end_src

** Environment
#+begin_src sh
ENV_NAME=kqapro
conda create -y -n $ENV_NAME python=3
conda activate $ENV_NAME

# pytorch for CUDA 11.6
pip install torch==1.12.0+cu116 torchvision==0.13.0+cu116 torchaudio==0.12.0 --extra-index-url https://download.pytorch.org/whl/cu116
pip install -r requirements.txt
#+end_src

* Running
** Preprocessing
#+begin_src sh
python -m domain.kqapro.preprocess --goal augmented_train_set
python -m domain.kqapro.preprocess --goal augmented_val_set
python -m domain.kqapro.preprocess --goal encoded_train_set
python -m domain.kqapro.preprocess --goal encoded_val_set
python -m domain.kqapro.preprocess --goal encoded_test_set
# python -m domain.kqapro.preprocess --goal encoded_train_mask
#+end_src

** Training
#+begin_src sh
python -m domain.kqapro.execution --config config.train_strong_sup
#+end_src>

** Testing on the validation set
#+begin_src sh
MODEL_LEARNING_DIR_PATH='path/to/model/learning/dir'
python -m domain.kqapro.run --config config.test-on-val-set --model-learning-dir $MODEL_LEARNING_DIR_PATH
#+end_src>

** Testing to make a prediction file
#+begin_src sh
MODEL_LEARNING_DIR_PATH='path/to/model/learning/dir'
python -m domain.kqapro.run --config config.test --model-learning-dir $MODEL_LEARNING_DIR_PATH
#+end_src>

** Testing with official evaluation code

#+begin_src sh
TRAIN_DATA_SET_PATH='path/to/train/data/set.json'
TEST_DATA_SET_PATH='path/to/test/data/set.json'
PREDICTION_FILE_PATH='path/to/predictions.txt'
python -m kqapro.evaluate --train $TRAIN_DATA_SET_PATH --test $TEST_DATA_SET_PATH --pred $PREDICTION_FILE_PATH
#+end_src>

* Acknowledgements
We thank to the authors of [[https://github.com/shijx12/][KQA Pro]] dataset. Our code also exploits the [[https://github.com/shijx12/KQAPro_Baselines][BART seq2seq program parser]] they released.
